#!/usr/bin/env Rscript
#================================================================================
# File:        runSitraPpest    
# Created:     2012-06-06
# Last Change: Thursday, 2012-06-07
# Description: runs sitra in parallel on (different hosts)
# Author:      Michel Kuhlmann (kum), <kum@tkconsult.ch>
# Institution: TK Consult AG
# Copyright:   GNU General Public Licence 
#================================================================================
genScreenString <- 
    function
(
    file           # pest-file to use
  , nthread        # number of threads to use
  , port = 4004    # Port number
  , os =    # operating system
        'windows'
)
{
    ppest_cmds <-
        list(
          'windows' = "beopest64.exe"
        , 'unix' = 'ppest')
    pre <- 'escape ^Oo'
    master.string <- 
        paste('screen -t "master" 0'
            , ' bash -c "cd master; ', ppest_cmds[[os]], ' ', file, ' /H /L :', port, '"'
            ,  sep = '')
    slave.strings <- 
        sapply(seq_len(nthread), function(i)
            paste('screen -t "thread', i,'" ', i, ' bash -c "cd ', i, '; '
                , ppest_cmds[[os]], ' ', file, ' /H localhost:', port, '"'
                , sep = '')
        )
    post <- 
        'select master'
    paste(paste(c(pre, master.string, slave.strings, post, ""), collapse = "\n"))
}
require('getopt', quietly = TRUE)
opt_spec <- 
    matrix(c(
        'help',     'h', 0, "logical",     "Getting help"
      , 'quiet',    'q', 0, "logical",     "Run quietly"
      , 'single-host', 's', 1, "numeric", "Number of threads to use" 
      , 'file', 'f', '1', "character", "Specify a pest-file"
      , 'port', 'p', '1', "character", "Port to communicate over"
    ), ncol = 5, byrow = TRUE)

opt <- getopt(spec = opt_spec)
if ( !is.null(opt$help) || length(commandArgs()) == 0 )   {    
    cat(getopt(spec = opt_spec, usage = TRUE, command = "runSitraPpest"))
    q(status=0)
} 
if ( is.null(opt$port) ) { opt$port <- 4004  }
if ( is.null(opt[['single-host']]) ) 
{  
    stop('Currently only single-host runs supported.\nUsage:\nrunSitrPpest -s <#thread>')
}
if ( !is.null(opt$file) ) 
{  
    pest_file <- opt$file
} else
{
    pest_file <- 
    {
        pst_files <- list.files(pattern = "*\\.pst")
        if ( length(pst_files) != 1 ) 
        {  
            stop('There are no or more 1 `.pst` files in the current directory\n', 
                 "Please specifiy one with \n runSitraPpest -f <file.pst> -s <#threads>")
        } else
        {
            pst_files
        }
    }
}
#setwd('~/tmp/ohneriv/')
#pest_file <- 'inv.pst'
#opt <- list('single-host' = 2
#           ,'port' = 4004)
if ( is.null(opt$quiet) ) 
    message('* Generating pest-input-files')

system('genSitraPestInput')

if ( is.null(opt$quiet) ) 
    message('* Copying files to diffent directories')
# Create directories
exit_status <-     # nothing returned; just called for copying and dir-creation
    lapply(c('master', seq_along(opt[['single-host']])), function(x)
           {
               dir.create(x, showWarnings = FALSE) 
               system(paste('cp *', x))
           }
    )


# Create screen-config-string
screen_string <- 
    genScreenString(pest_file, opt[['single-host']], opt$port)

tmpfile <- tempfile()
cat(screen_string, file = tmpfile)
# Start screen as multiplexer

if ( is.null(opt$quiet) ) 
    message('* Starting Screen and ppest')
system(paste('screen -c', tmpfile))

if ( is.null(opt$quiet) ) 
    message('* Deleting directories')
system('mv master/* .')

exit_status <-     # nothing returned; just called for copying and dir-creation
    lapply(c('master', seq_along(opt[['single-host']])), function(x)
           {
               system(paste('rm -r', x))
           }
    )

message('* The calibration went successfully; look into \n'
      ,'\t- ', sub('pst', 'rec', pest_file), ' for the log-file\n'
      ,'\t- ', sub('pst', 'par', pest_file), ' for the final parameters\n'
      #,'*','pdfs are generated to compare simulation vs observation'
      )
# End of File ===================================================================
# vim: set ft=r:
